<?php

/**
 * Category_Model_Doctrine_CategoryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Faq_Model_Doctrine_CategoryTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object Category_Model_Doctrine_CategoryTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Faq_Model_Doctrine_Category');
    }
    
     public function getPublishCategoryQuery() {
        $q = $this->createQuery('a')
                ->addSelect('a.*')
                ->addSelect('at.*')
                ->leftJoin('a.Translation at');
        return $q;
    }

    public function getPhotoQuery(Doctrine_Query $q = null) {
        if(null == $q) {
            $q = $this->createQuery('a');
            $q->addSelect('a.*');
        }
        $q->addSelect('pr.*');
        $q->addSelect('p.*');
        $q->leftJoin('a.PhotoRoot pr');
        $q->leftJoin('a.Photos p');
        return $q;
    }
    
    public function getLimitQuery($limit, Doctrine_Query $q = null) {
        if(null == $q) {
            $q = $this->createQuery('a');
            $q->addSelect('a.*');
        }
        $q->limit($limit);
        return $q;
    }
    
    public function getCategoryIdQuery($categoryId = null, Doctrine_Query $q = null) {
        if(null == $q) {
            $q = $this->createQuery('ac');
        }
        $q->addSelect('ac.*');
        $q->leftJoin('a.Category ac');
        if(is_integer($categoryId)) {
            $q->andWhere('ac.id');
        } elseif(is_array($categoryId && !empty($categoryId))) {
            $q->andWhere('ac.id IN ?', array($categoryId));
        }
        return $q;
    }
    
    public function getAllCategoryQuery() {
        $q = $this->createQuery('a')
                ->addSelect('a.*')
                ->addSelect('at.*')
                ->addSelect('pr.*')
                ->leftJoin('a.PhotoRoot pr')
                ->leftJoin('a.Translation at');
        return $q;
    }
    
    public function getCategoryForSiteMapQuery() {
        $q = $this->createQuery('cat');
        $q->addSelect('cat.*');
        $q->addSelect('pro.*');
        $q->addSelect('tr.*');
        $q->leftJoin('cat.Translation tr');
        $q->leftJoin('cat.Products pro');
        $q->andWhere('pro.status = ?', 1);
        $q->andWhere('pro.availability > ?', 0);
        $q->andWhere('pro.reduced_price = ?', 0);
        return $q;
    }
}